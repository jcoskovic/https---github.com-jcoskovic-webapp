version: '3.8'

services:
  # Frontend - Angular 19
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod
    ports:
      - "4200:80"
    environment:
      - NODE_ENV=production
    depends_on:
      - backend
    networks:
      - abbrevio-network

  # Backend - Laravel 11
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - APP_ENV=production
      - APP_DEBUG=false
      - APP_URL=${APP_URL:-https://abbrevio-demo.up.railway.app}
      - DB_CONNECTION=mysql
      - DB_HOST=${MYSQLHOST}
      - DB_PORT=${MYSQLPORT:-3306}
      - DB_DATABASE=${MYSQLDATABASE}
      - DB_USERNAME=${MYSQLUSER}
      - DB_PASSWORD=${MYSQLPASSWORD}
      - JWT_SECRET=${JWT_SECRET}
      - CORS_ALLOWED_ORIGINS=${CORS_ALLOWED_ORIGINS:-https://abbrevio-demo.up.railway.app}
      - MAIL_MAILER=smtp
      - MAIL_HOST=${MAIL_HOST}
      - MAIL_PORT=${MAIL_PORT:-587}
      - MAIL_USERNAME=${MAIL_USERNAME}
      - MAIL_PASSWORD=${MAIL_PASSWORD}
      - MAIL_ENCRYPTION=tls
      - MAIL_FROM_ADDRESS=${MAIL_FROM_ADDRESS}
      - MAIL_FROM_NAME="Abbrevio Demo"
      - GROQ_API_KEY=${GROQ_API_KEY}
    # Remove volume mappings for Railway compatibility
    # Railway will handle persistent storage differently
    networks:
      - abbrevio-network

  # ML Service - Python Flask
  ml-service:
    build:
      context: ./ml-service
      dockerfile: Dockerfile
    ports:
      - "5001:5001"
    environment:
      - FLASK_ENV=production
      - BACKEND_URL=http://backend:8000
      - GROQ_API_KEY=${GROQ_API_KEY}
    depends_on:
      - backend
    networks:
      - abbrevio-network

networks:
  abbrevio-network:
    driver: bridge

# Note: Railway manages databases separately, no need for local MySQL container